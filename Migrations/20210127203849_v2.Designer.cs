// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProspectManagementTool.Data;

namespace ProspectManagementTool.Migrations
{
    [DbContext(typeof(ProspectManagementContext))]
    [Migration("20210127203849_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PM")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("ProspectManagementTool.Models.Attribute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ProspectManagementTool.Models.Draft", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttributeID");

                    b.Property<byte>("DraftAge");

                    b.Property<string>("DraftInitialRating")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("DraftName")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<byte>("DraftOV");

                    b.Property<int>("DraftPosition");

                    b.Property<int>("DraftPotential");

                    b.Property<int?>("DraftSelected");

                    b.Property<int?>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("AttributeID");

                    b.HasIndex("TeamID");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("ProspectManagementTool.Models.Prospect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttributeID");

                    b.Property<byte>("ProspectAge");

                    b.Property<string>("ProspectDraftedBy");

                    b.Property<string>("ProspectInitialRating")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("ProspectName")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<byte>("ProspectOV");

                    b.Property<int>("ProspectPosition");

                    b.Property<int>("ProspectPotential");

                    b.Property<string>("ProspectRerollRating")
                        .HasMaxLength(4);

                    b.Property<int>("TeamID");

                    b.Property<int?>("TeamProspectVMID");

                    b.HasKey("ID");

                    b.HasIndex("AttributeID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TeamProspectVMID");

                    b.HasIndex("ProspectName", "ProspectAge", "ProspectPosition")
                        .IsUnique();

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("ProspectManagementTool.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ProspectManagementTool.ViewModels.TeamProspectVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttributeID");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("ProspectAge");

                    b.Property<string>("ProspectInitialRating")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("ProspectName")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<byte>("ProspectOV");

                    b.Property<int>("ProspectPosition");

                    b.Property<int>("ProspectPotential");

                    b.Property<int>("TeamID");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("AttributeID");

                    b.HasIndex("TeamID");

                    b.ToTable("TeamProspectVM");
                });

            modelBuilder.Entity("ProspectManagementTool.Models.Draft", b =>
                {
                    b.HasOne("ProspectManagementTool.Models.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProspectManagementTool.Models.Team", "Team")
                        .WithMany("Drafts")
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("ProspectManagementTool.Models.Prospect", b =>
                {
                    b.HasOne("ProspectManagementTool.Models.Attribute", "Attribute")
                        .WithMany("Prospects")
                        .HasForeignKey("AttributeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProspectManagementTool.Models.Team", "Team")
                        .WithMany("Prospects")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProspectManagementTool.ViewModels.TeamProspectVM")
                        .WithMany("Prospects")
                        .HasForeignKey("TeamProspectVMID");
                });

            modelBuilder.Entity("ProspectManagementTool.ViewModels.TeamProspectVM", b =>
                {
                    b.HasOne("ProspectManagementTool.Models.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProspectManagementTool.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
